<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_star_no_connections</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_selected = false;
star_num = -1;
has_connections = false;
has_only_correct_connections = false;
has_all_correct_connections = false;

subimage = 0;
rotation = random_range(-100,100);
if (irandom(1) == 0)
    rotation_speed = random_range(-0.5,-0.2);
else
    rotation_speed = random_range(0.2,0.5);
emitter_activated = false;
draw_number = false;

part_emitter = part_emitter_create(global.star_part_system);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_debug_message(string(star_num) + " destroyed");
part_emitter_destroy(global.star_part_system,part_emitter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// particle stuff
if (has_all_correct_connections &amp;&amp; !emitter_activated)
{
    emitter_activated = true;
    //show_debug_message(string(star_num) + " emitting at " + string(x) + "," + string(y));
    part_emitter_region(global.star_part_system, part_emitter, x-20, x+20, y-20, y+20, ps_shape_ellipse, ps_distr_gaussian);
    part_emitter_stream(global.star_part_system,part_emitter,global.star_particle,-3);
}
else if (!has_all_correct_connections &amp;&amp; emitter_activated)
{
    emitter_activated = false;
    //show_debug_message(string(star_num) + "stopped emitting");
    part_emitter_clear(global.star_part_system,part_emitter);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Ending/cancelling line
if (global.star_selected != noone)
{
var connection = make_connection_string(star_num,global.star_selected.star_num);
if (global.star_selected != id &amp;&amp; ds_list_find_index(global.star_connections,connection) == -1)
{
    //show_debug_message("dropped on " + string(star_num) + " at (" + string(x) + "," + string(y) + ")")
    show_debug_message("connected " + string(global.star_selected.star_num) + " and " + string(star_num));

    // Update the connection status of the other star and us
    add_connection(id,global.star_selected,connection);
                
    is_selected = false;
    global.star_selected = noone;
    
    var line = global.line_editing;
    line.ending_point[point_x] = x;
    line.ending_point[point_y] = y;
    line.connection = connection;
    global.line_editing = noone;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Starting line
if (global.star_selected == noone)
{
    //show_debug_message("selected " + string(star_num) + " at (" + string(x) + "," + string(y) + ")");
    is_selected = true;
    global.star_selected = id;
    
    var new_line = instance_create(mouse_x, mouse_y, obj_line);
    global.line_editing = new_line;
    new_line.starting_point[point_x] = x;
    new_line.starting_point[point_y] = y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (has_all_correct_connections)
{
    sprite_index = spr_star_perfect_connections;
}
else if (has_only_correct_connections)
{
    sprite_index = spr_star_good_connections;
}
else if (has_connections)
{
    sprite_index = spr_star_bad_connections;
}
else
{
    sprite_index = spr_star_no_connections;
    if (abs(rotation) &gt; 100)
        rotation_speed *= -1;
    rotation += rotation_speed;
}

subimage += 1;
draw_sprite_ext(sprite_index,subimage,x,y,1,1,rotation,c_white,255);
if (draw_number)
{
    draw_set_colour(c_black);
    draw_text(x+20,y-5,string(star_num));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
